!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@microsoft/mezzurite-core"),require("angular")):"function"==typeof define&&define.amd?define(["exports","@microsoft/mezzurite-core","angular"],t):t(e.MezzuriteAngularJS={},e.MezzuriteCore,e.angular)}(this,function(e,t,r){"use strict";function n(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},o={name:"@microsoft/mezzurite-angularjs",version:"1.0.1",description:"Library for capturing SPA timings within AngularJS.",author:"Microsoft Corporation",license:"MIT",main:"./dist/index.js",module:"./dist-esm/index.js",scripts:{clean:"shx rm -rf browser dist dist-esm",build:"npm run clean && rollup -c && npm run post-build-cleanup","post-build-cleanup":"shx rm -rf dist/src dist-esm/src"},dependencies:{"@microsoft/mezzurite-core":"^1.0.1","@types/angular":"^1.5.6","reflect-metadata":"^0.1.8"},peerDependencies:{angular:"^1.6.6"},devDependencies:{angular:"^1.6.6","awesome-typescript-loader":"^5.2.0",concurrently:"^3.0.0","lite-server":"^2.2.2",path:"^0.12.7","rollup-plugin-copy-glob":"^0.2.2","rollup-plugin-json":"^3.1.0","rollup-plugin-node-resolve":"^3.4.0","rollup-plugin-typescript2":"^0.17.2","rollup-plugin-uglify-es":"0.0.1",shx:"^0.3.1",tslib:"^1.9.3",typescript:"^2.9.2"}},a={version:o.version,name:o.name},u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.createMezzuriteObject=function(t){e.createMezzuriteObject.call(this,t),window.mezzurite.packageVersion=a.version,window.mezzurite.packageName=a.name},t}(t.MezzuriteUtils),s=function(){function e(e){this.$timeout=e,this.firstLoad=!0,this.endCounter=0}return e.prototype.start=function(e,r){window.mezzurite||(window.mezzurite={}),u.createMezzuriteObject(window.mezzurite),window.mezzurite.routerPerf=!0,e.$on("$routeChangeStart",function(e,r,n){r&&r.$$route&&(window.mezzurite.recentPath!==r.$$route.originalPath&&(window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(u.getName(t.MezzuriteConstants.altName,u.makeId()),0,t.MezzuriteConstants.altMarkEnd)))),window.mezzurite.recentPath=r.$$route.originalPath)}),e.$on("$stateChangeStart",function(e,r,n,i,o,a){r&&r.url&&(window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(u.getName(t.MezzuriteConstants.altName,u.makeId()),0,t.MezzuriteConstants.altMarkEnd))))}),r&&r.onStart({},function(e){window.mezzurite.captureCycleStarted?(window.mezzurite.captureCycleStarted=!1,t.PerformanceTelemetryService.captureTimings(!0),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTelemetryService.startCaptureCycle()):(t.PerformanceTelemetryService.startCaptureCycle(),window.mezzurite.firstViewLoaded?window.performance.mark(t.MezzuriteConstants.vltMarkStart):(window.performance.mark(t.MezzuriteConstants.altMarkEnd),window.performance.mark(t.MezzuriteConstants.vltMarkStart),t.PerformanceTimingService.measure(u.getName(t.MezzuriteConstants.altName,u.makeId()),0,t.MezzuriteConstants.altMarkEnd)))})},e.$inject=["$timeout"],e}(),c=function(){function e(e,r){this.name=e,this.element=r,this.key=u.makeId(),window.performance.mark(this.key+t.MezzuriteConstants.componentMarkStart),this.fullName=t.MezzuriteConstants.measureNamePrefix+";"+this.name+";"+this.key;var n={root:null,rootMargin:"0px"},i=this;new IntersectionObserver(function(e,t){var r=e[0];window.mezzurite.viewportWidth=r.rootBounds.width,window.mezzurite.viewportHeight=r.rootBounds.height,void 0!==i.fullName&&(r.isIntersecting?window.mezzurite.vltComponentLookup[i.fullName]=!0:window.mezzurite.vltComponentLookup[i.fullName]=!1),t.unobserve(i.element)},n).observe(this.element)}return e.prototype.setComponentComplete=function(){window.performance.mark(this.key+t.MezzuriteConstants.componentMarkEnd);var e=this;setTimeout(function(){var r=t.PerformanceTimingService.calculateSlowestResource(e.element,e.fullName);null===r?t.PerformanceTimingService.measure(e.fullName):t.PerformanceTimingService.measure(e.fullName,r),e.element=null},t.MezzuriteConstants.slowestResourceTimeout)},e}(),m=function(){function e(){}return e.prototype.initPerfComponent=function(e,t){return new c(e,t)},e}();r.module("angularjsrouting",[]).service("AngularJsRoutingService",s).service("AngularJsPerfService",m),e.AngularJsRoutingService=s,e.AngularJsPerfService=m,e.AngularJsPerfComponent=c,e.MezzuriteAngularJsUtils=u,Object.defineProperty(e,"__esModule",{value:!0})});